apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.app.namespace }}
  name: {{ .Values.app.name }}
  annotations:
    secrets.doppler.com/reload: "true"
spec:
  selector:
    matchLabels:
      run: {{ .Values.app.name }}
  replicas: {{ .Values.app.replicas }}
  template:
    metadata:
      labels:
        run: {{ .Values.app.name }}
    spec:
      restartPolicy: {{ .Values.app.restartPolicy | default "Always" | quote }}
      containers:
      - name: {{ .Values.app.container.name | default .Values.app.name }}
        image: {{ .Values.app.container.image }}
        ports:
          - containerPort: {{ .Values.app.container.port }}
        imagePullPolicy: {{ .Values.app.container.imagePullPolicy }}

        {{- if .Values.app.container.secret }}
        envFrom:
          - secretRef:
              name: {{ .Values.app.container.secret }}
        {{- end}}

        {{- if .Values.app.container.env }}
        env:
          {{- range $envIndex, $env := .Values.app.container.env }}
          - name: {{ $env.name }}
            value: {{ $env.value | quote }}
          {{- end }}
        {{- end }}

        {{- if .Values.app.livenessProbe.enabled }}
        livenessProbe:
          {{- omit .Values.app.livenessProbe "enabled" | toYaml |  nindent 10 }}
        {{- end}}
        {{- if .Values.app.readinessProbe.enabled }}
        readinessProbe:
          {{- omit .Values.app.readinessProbe "enabled" | toYaml |  nindent 10 }}
        {{- end}}
        {{- if .Values.app.startupProbe.enabled }}
        startupProbe:
          {{- omit .Values.app.startupProbe "enabled" | toYaml |  nindent 10 }}
        {{- end}}



      
